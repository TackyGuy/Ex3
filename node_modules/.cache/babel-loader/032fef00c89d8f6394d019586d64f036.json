{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n/**\n * Un hook personnalisé pour créer un état (useState) et le persister (sauvegarder) dans localStorage\n * @param {*} valeurParDefaut La valeur par défaut de l'état que nous voulons persister\n * @param {string} etiquetteLS La clé localStorage que nous voulons utiliser pour stocker la valeur à persister\n * @returns {Array} Le tableau retourné par useState()\n */\n\nexport default function useLocalStorageState(valeurParDefaut, etiquetteLS) {\n  _s();\n\n  const [etat, setEtat] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(etiquetteLS)) || valeurParDefaut;\n  });\n  useEffect(() => window.localStorage.setItem(etiquetteLS, JSON.stringify(etat)), [etat, etiquetteLS]);\n  return [etat, setEtat];\n}\n\n_s(useLocalStorageState, \"Ggw3VCx6WnWP+xQGh4Th1n5TmlU=\");","map":{"version":3,"sources":["C:/Users/yoman/OneDrive/Bureau/pvt-ex3-firestore-main/src/hooks/useLocalStorageState.js"],"names":["useState","useEffect","useLocalStorageState","valeurParDefaut","etiquetteLS","etat","setEtat","JSON","parse","window","localStorage","getItem","setItem","stringify"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,oBAAT,CAA8BC,eAA9B,EAA+CC,WAA/C,EAA4D;AAAA;;AACzE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAC9B,MAAM;AACJ,WAAOO,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BP,WAA5B,CAAX,KAAwDD,eAA/D;AACD,GAH6B,CAAhC;AAMAF,EAAAA,SAAS,CAAC,MAAMQ,MAAM,CAACC,YAAP,CAAoBE,OAApB,CAA4BR,WAA5B,EAAyCG,IAAI,CAACM,SAAL,CAAeR,IAAf,CAAzC,CAAP,EAAuE,CAACA,IAAD,EAAOD,WAAP,CAAvE,CAAT;AAEA,SAAO,CAACC,IAAD,EAAOC,OAAP,CAAP;AACD;;GAVuBJ,oB","sourcesContent":["import {useState, useEffect} from 'react';\n\n/**\n * Un hook personnalisé pour créer un état (useState) et le persister (sauvegarder) dans localStorage\n * @param {*} valeurParDefaut La valeur par défaut de l'état que nous voulons persister\n * @param {string} etiquetteLS La clé localStorage que nous voulons utiliser pour stocker la valeur à persister\n * @returns {Array} Le tableau retourné par useState()\n */\nexport default function useLocalStorageState(valeurParDefaut, etiquetteLS) {\n  const [etat, setEtat] = useState(\n    () => {\n      return JSON.parse(window.localStorage.getItem(etiquetteLS)) || valeurParDefaut;\n    }\n  );\n  \n  useEffect(() => window.localStorage.setItem(etiquetteLS, JSON.stringify(etat)), [etat, etiquetteLS]);\n  \n  return [etat, setEtat];\n}"]},"metadata":{},"sourceType":"module"}