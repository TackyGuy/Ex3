{"ast":null,"code":"import _slicedToArray from\"C:/Users/yoman/OneDrive/Bureau/pvt-ex3-firestore-main/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';/**\n * Un hook personnalisé pour créer un état (useState) et le persister (sauvegarder) dans localStorage\n * @param {*} valeurParDefaut La valeur par défaut de l'état que nous voulons persister\n * @param {string} etiquetteLS La clé localStorage que nous voulons utiliser pour stocker la valeur à persister\n * @returns {Array} Le tableau retourné par useState()\n */export default function useLocalStorageState(valeurParDefaut,etiquetteLS){var _useState=useState(function(){return JSON.parse(window.localStorage.getItem(etiquetteLS))||valeurParDefaut;}),_useState2=_slicedToArray(_useState,2),etat=_useState2[0],setEtat=_useState2[1];useEffect(function(){return window.localStorage.setItem(etiquetteLS,JSON.stringify(etat));},[etat,etiquetteLS]);return[etat,setEtat];}","map":{"version":3,"sources":["C:/Users/yoman/OneDrive/Bureau/pvt-ex3-firestore-main/src/hooks/useLocalStorageState.js"],"names":["useState","useEffect","useLocalStorageState","valeurParDefaut","etiquetteLS","JSON","parse","window","localStorage","getItem","etat","setEtat","setItem","stringify"],"mappings":"wIAAA,OAAQA,QAAR,CAAkBC,SAAlB,KAAkC,OAAlC,CAEA;AACA;AACA;AACA;AACA;AACA,GACA,cAAe,SAASC,CAAAA,oBAAT,CAA8BC,eAA9B,CAA+CC,WAA/C,CAA4D,eACjDJ,QAAQ,CAC9B,UAAM,CACJ,MAAOK,CAAAA,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BL,WAA5B,CAAX,GAAwDD,eAA/D,CACD,CAH6B,CADyC,wCAClEO,IADkE,eAC5DC,OAD4D,eAOzEV,SAAS,CAAC,iBAAMM,CAAAA,MAAM,CAACC,YAAP,CAAoBI,OAApB,CAA4BR,WAA5B,CAAyCC,IAAI,CAACQ,SAAL,CAAeH,IAAf,CAAzC,CAAN,EAAD,CAAuE,CAACA,IAAD,CAAON,WAAP,CAAvE,CAAT,CAEA,MAAO,CAACM,IAAD,CAAOC,OAAP,CAAP,CACD","sourcesContent":["import {useState, useEffect} from 'react';\n\n/**\n * Un hook personnalisé pour créer un état (useState) et le persister (sauvegarder) dans localStorage\n * @param {*} valeurParDefaut La valeur par défaut de l'état que nous voulons persister\n * @param {string} etiquetteLS La clé localStorage que nous voulons utiliser pour stocker la valeur à persister\n * @returns {Array} Le tableau retourné par useState()\n */\nexport default function useLocalStorageState(valeurParDefaut, etiquetteLS) {\n  const [etat, setEtat] = useState(\n    () => {\n      return JSON.parse(window.localStorage.getItem(etiquetteLS)) || valeurParDefaut;\n    }\n  );\n  \n  useEffect(() => window.localStorage.setItem(etiquetteLS, JSON.stringify(etat)), [etat, etiquetteLS]);\n  \n  return [etat, setEtat];\n}"]},"metadata":{},"sourceType":"module"}