{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yoman\\\\OneDrive\\\\Bureau\\\\pvt-ex3-firestore-main\\\\pvt-ex3-firestore-main\\\\src\\\\composants\\\\ListeProduits.jsx\",\n    _s = $RefreshSig$();\n\nimport './ListeProduits.scss';\nimport Produit from \"./Produit\";\nimport { useEffect, useState } from 'react';\n/******* Ex#3 - Étape D ********************************/\n// Importer l'objet bd du fichier firebase.js\n\nimport bd from '../data/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ListeProduits(props) {\n  _s();\n\n  /******* Ex#3 - Étape E ********************************/\n  // Créer un \"état\" React pour les produits (utiliser useState)\n  const [produits, setProduits] = useState();\n  useEffect(() => {\n    async function getProduits() {\n      // On initialise un tableau pour contenir les produits extraits de Firestore\n      const tabProduits = [];\n      /******* Ex#3 - Étape F ********************************/\n      // Faire une requête à la collection de produits sur Firestore et remplir les tableau tabProduits avec les données de produits retournées par Firestore\n      // [Suggestion : remarquez que la fonction getProduits() est marquée 'async'. Lorsque vous appelez la méthode Firestore qui retourne les produits, cette fonction \n      // est une Promesse, vous pouvez simplement utiliser la syntax 'await' pour attendre le résultat avant de remplir le tableau tabProduits \n      // (visionnez la capsule au sujet du code asynchrone en JavaScript)]\n\n      bd.collection(\"ex3-produits\").get().then(rep => rep.forEach(element => tabProduits.push(element.data()))); //console.log(tabProduits);\n\n      /******* Ex#3 - Étape G ********************************/\n      // Modifier l'état des produits (initialisé ci-dessus avec useState) en utilisant le mutateur et le tableau tabProduits\n\n      setProduits(tabProduits);\n    }\n\n    getProduits();\n  }, []); // Ne modifiez surtout pas le tableau des dépendances à gauche : vous risquez un appel récurent sans fin de l'API Firebase !!!!\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ListeProduits\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Produits disponibles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: produits.map()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ListeProduits, \"4OrSVjhQTWWSwKcrH5Z7tt9lGRA=\");\n\n_c = ListeProduits;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListeProduits\");","map":{"version":3,"sources":["C:/Users/yoman/OneDrive/Bureau/pvt-ex3-firestore-main/pvt-ex3-firestore-main/src/composants/ListeProduits.jsx"],"names":["Produit","useEffect","useState","bd","ListeProduits","props","produits","setProduits","getProduits","tabProduits","collection","get","then","rep","forEach","element","push","data","map"],"mappings":";;;AAAA,OAAO,sBAAP;AACA,OAAOA,OAAP,MAAoB,WAApB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA;AACA;;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC3C;AACA;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,EAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeO,WAAf,GAA6B;AAC3B;AACA,YAAMC,WAAW,GAAG,EAApB;AAEA;AACA;AACA;AACA;AACA;;AACAN,MAAAA,EAAE,CAACO,UAAH,CAAc,cAAd,EAA8BC,GAA9B,GAAoCC,IAApC,CACEC,GAAG,IAAIA,GAAG,CAACC,OAAJ,CAAYC,OAAO,IAAIN,WAAW,CAACO,IAAZ,CAAiBD,OAAO,CAACE,IAAR,EAAjB,CAAvB,CADT,EAT2B,CAY3B;;AAEA;AACA;;AACAV,MAAAA,WAAW,CAACE,WAAD,CAAX;AACD;;AACDD,IAAAA,WAAW;AACZ,GApBQ,EAoBN,EApBM,CAAT,CAL2C,CAyBnC;;AAER,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBASGF,QAAQ,CAACY,GAAT;AATH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA3CuBd,a;;KAAAA,a","sourcesContent":["import './ListeProduits.scss';\nimport Produit from \"./Produit\";\nimport { useEffect, useState } from 'react';\n/******* Ex#3 - Étape D ********************************/ \n// Importer l'objet bd du fichier firebase.js\nimport bd from '../data/firebase';\n\nexport default function ListeProduits(props) {\n  /******* Ex#3 - Étape E ********************************/ \n  // Créer un \"état\" React pour les produits (utiliser useState)\n  const [produits, setProduits] = useState();\n    \n  useEffect(() => {\n    async function getProduits() {\n      // On initialise un tableau pour contenir les produits extraits de Firestore\n      const tabProduits = [];\n      \n      /******* Ex#3 - Étape F ********************************/ \n      // Faire une requête à la collection de produits sur Firestore et remplir les tableau tabProduits avec les données de produits retournées par Firestore\n      // [Suggestion : remarquez que la fonction getProduits() est marquée 'async'. Lorsque vous appelez la méthode Firestore qui retourne les produits, cette fonction \n      // est une Promesse, vous pouvez simplement utiliser la syntax 'await' pour attendre le résultat avant de remplir le tableau tabProduits \n      // (visionnez la capsule au sujet du code asynchrone en JavaScript)]\n      bd.collection(\"ex3-produits\").get().then(\n        rep => rep.forEach(element => tabProduits.push(element.data()))\n      )\n      //console.log(tabProduits);\n      \n      /******* Ex#3 - Étape G ********************************/ \n      // Modifier l'état des produits (initialisé ci-dessus avec useState) en utilisant le mutateur et le tableau tabProduits\n      setProduits(tabProduits);\n    }\n    getProduits();\n  }, []); // Ne modifiez surtout pas le tableau des dépendances à gauche : vous risquez un appel récurent sans fin de l'API Firebase !!!!\n\n  return (\n    <div className=\"ListeProduits\">\n      <h2>Produits disponibles</h2>\n      <ul>        \n        {/*\n          ******* Ex#3 - Étape H ******************************** \n          Utiliser la variable d'état des produits pour générer les composants 'Produit' ci-dessous.\n          Remarque : Vous pouvez reproduire la solution déjà faite en classe (c'est un trivial copier-coller).\n          Attention : les composants Produit s'attendent à recevoir l'état du panier dans leurs props, donc vous devez\n          avoir l'attribut \"etatPanier={props.etatPanier}\" quand vous les générer ici : encore une fois, regardez \n          le code de l'exercice de classe.\n        */}\n        {produits.map()}\n      </ul>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}